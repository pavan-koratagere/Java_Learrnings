Two major Source control version types
1) Centralized Version controls
    Eg : CVS, SVN
2) DeCentralized/ Distributed Version control
    Eg: Git

Git
Most actions of Git are local does not require n/w connectiion.	

In Git Files are in either of these 3 states
1) Working Folder
2) Staging Area
3) Git Repository(A .git folder within the working directory)
4) 4th state is #Remote Repository 
 
   *Files withing #workin directory may or may not be managed by git.
   Staging Area : 
   Git Repository: Manages the git commit history
   
   In Giy
   51294 - 4.7 p09
   
git version
git config --global user.name "Abe Lincoln"
git config --global user.email "mrabe@git.training"
git config --global --list
git clone github-https-url # paste in your GitHub HTTPS clone URL
ls
cd github-demo
ls
git status
echo "Test Git Quick Start demo" >> start.txt
ls
cat start.txt
git status
git add start.txt
git status
git commit -m "Adding start text file"
git status
git push origin master   
-------------------------------------------------------------------

To edit Git config use following command
git config --global -e

Create brand new Git Repository
git init "RepoName"

To create a Git Repository for an existing Project folder
 Goto the Root folder of the Project 
 command : git init
 Note : U r not giving any name so git repo will be created at current directory itself
One thing we should keep in mind git commit only puts files in its local repository not in Git server

Git Pull command:
 Pull command is used to sync local repo with remote server and merging the latest from server to local
 Git Pull =  Git fetch + Git Merge ( Pull command does two job fetching and merging into local repo)
 example command :  git pull origin master
Here the origin refers to the remote git repository location. origin is just an alias name given. we can name it anything we want

Below command list all aliases
git remote -v  
 
